{"version":3,"file":"gear-inn-manager.debug.js","sources":["../../../src/gear/Helper.js","../../../src/InnManager/Config.js","../../../src/InnManager/InnManager.js"],"sourcesContent":["import {ImageManager} from \"rmmz\";\r\n\r\n/**\r\n * the helper class who handle plugin parameters\r\n * @internal\r\n */\r\nclass Helper {\r\n\r\n    /**\r\n     * return the current active script parameters\r\n     * @returns {string}\r\n     */\r\n    static find() {\r\n        const currentScript = document.currentScript.src.match(/.+\\/(.+)\\.js/)[1];\r\n        return PluginManager.parameters(currentScript);\r\n    }\r\n\r\n    /**\r\n     * parse raw param into an object\r\n     *\r\n     * @static\r\n     * @param {string} parameters\r\n     * @return {object}\r\n     */\r\n    static parse(parameters) {\r\n        function parseParameters(object) {\r\n            try {\r\n                return JSON.parse(object, (key, value) => {\r\n                    try {\r\n                        return parseParameters(value)\r\n                    } catch (e) {\r\n                        return value\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                return object\r\n            }\r\n        }\r\n\r\n        return parseParameters(JSON.stringify(parameters))\r\n    }\r\n\r\n    /**\r\n     * load a bitmap from a defined directory\r\n     * @param directory\r\n     * @param filename\r\n     * @returns {Bitmap}\r\n     */\r\n    static loadCustomDir(directory,filename){\r\n        return ImageManager.loadBitmap(`img/${directory}/`, filename);\r\n    }\r\n\r\n}\r\nexport {Helper}","import {Helper} from \"../gear/Helper\";\r\n\r\n\r\nexport const pluginName = \"gear-inn-manager\";\r\n\r\nconst rawParams = Helper.find();\r\n\r\n/**\r\n *\r\n * @type {InnParameters}\r\n */\r\nexport const PARAMS = Helper.parse(rawParams);\r\n","import {PARAMS} from \"./Config\";\r\n\r\n\r\nclass InnManager {\r\n\r\n    static _data = PARAMS;\r\n\r\n    static _inns = PARAMS.inns;\r\n    static _func = {};\r\n    static _defaultInn = {};\r\n    static _id = \"\";\r\n\r\n    constructor() {\r\n        throw new Error(\"this is a static class\");\r\n    }\r\n\r\n    /**\r\n     * init the InnManager with an ID\r\n     * @param {string} id\r\n     */\r\n    static init(id){\r\n        this._id = id;\r\n    }\r\n\r\n    /**\r\n     * return the whole array of inns\r\n     * @returns {Inn[]}\r\n     */\r\n    static inns(){\r\n        return this._inns;\r\n    }\r\n\r\n    /**\r\n     * return the active inn\r\n     * @returns {Inn}\r\n     */\r\n    static inn(){\r\n        let index = this.findInn(this._id);\r\n        return this._inns[index];\r\n    }\r\n\r\n    /**\r\n     * return the inn display name\r\n     * @returns {string}\r\n     */\r\n    static innName(){\r\n        return this.inn().displayName;\r\n    }\r\n\r\n    /**\r\n     * return the inn id\r\n     * @returns {string}\r\n     */\r\n    static innId(){\r\n        return this.inn().id;\r\n    }\r\n\r\n    /**\r\n     * return the whole array of rooms for the active inn\r\n     * @returns {Room[]}\r\n     */\r\n    static rooms(){\r\n        return this.inn().rooms;\r\n    }\r\n\r\n    /**\r\n     * return a specific room for the active inn\r\n     * @param {number} id - the room index\r\n     * @returns {Room}\r\n     */\r\n    static room(id){\r\n        return this.rooms()[id];\r\n    }\r\n\r\n    /**\r\n     * register a custom action to use for a room\r\n     * @param {string} actionName - the action name\r\n     * @param {()=> void} callback - the action function\r\n     */\r\n    static registerAction(actionName,callback){\r\n        this._func[actionName] = callback;\r\n    }\r\n\r\n    /**\r\n     * call a specific action or a room\r\n     * @param {string} actionName - the action name\r\n     * @param {any[]} args - the action arguments\r\n     */\r\n    static executeAction(actionName,args){\r\n        if(this._func.hasOwnProperty(actionName)){\r\n            this._func[actionName].call(this,args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * find a inn via it's id\r\n     * @param {string} name - the inn name\r\n     * @returns {number}\r\n     */\r\n    static findInn(name){\r\n        let index = 0;\r\n        for(let i = 0; i < this._inns.length; i++){\r\n            const {id} = this._inns[i];\r\n            if(id === name){\r\n                index = 0;\r\n                break;\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n\r\n\r\n}\r\nexport {InnManager}"],"names":[],"mappings":"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"}