{"version":3,"file":"gear-inn-manager.js","sources":["../../../src/gear/Helper.js","../../../src/InnManager/Config.js","../../../src/InnManager/InnManager.js","../../../src/InnManager/Window_InnRooms.js","../../../src/InnManager/Window_InnConfirmation.js","../../../src/InnManager/Window_InnConfirmationTitle.js","../../../src/InnManager/Scene_Inn.js"],"sourcesContent":["import {ImageManager} from \"rmmz\";\r\n\r\n/**\r\n * the helper class who handle plugin parameters\r\n * @internal\r\n */\r\nclass Helper {\r\n\r\n    /**\r\n     * return the current active script parameters\r\n     * @returns {string}\r\n     */\r\n    static find() {\r\n        const currentScript = document.currentScript.src.match(/.+\\/(.+)\\.js/)[1];\r\n        return PluginManager.parameters(currentScript);\r\n    }\r\n\r\n    /**\r\n     * parse raw param into an object\r\n     *\r\n     * @static\r\n     * @param {string} parameters\r\n     * @return {object}\r\n     */\r\n    static parse(parameters) {\r\n        function parseParameters(object) {\r\n            try {\r\n                return JSON.parse(object, (key, value) => {\r\n                    try {\r\n                        return parseParameters(value)\r\n                    } catch (e) {\r\n                        return value\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                return object\r\n            }\r\n        }\r\n\r\n        return parseParameters(JSON.stringify(parameters))\r\n    }\r\n\r\n    /**\r\n     * load a bitmap from a defined directory\r\n     * @param directory\r\n     * @param filename\r\n     * @returns {Bitmap}\r\n     */\r\n    static loadCustomDir(directory,filename){\r\n        return ImageManager.loadBitmap(`img/${directory}/`, filename);\r\n    }\r\n\r\n}\r\nexport {Helper}","import {Helper} from \"../gear/Helper\";\r\n\r\n\r\nexport const pluginName = \"gear-inn-manager\";\r\n\r\nconst rawParams = Helper.find();\r\n\r\n/**\r\n *\r\n * @type {InnParameters}\r\n */\r\nexport const PARAMS = Helper.parse(rawParams);\r\nconsole.log(PARAMS);\r\n","import {PARAMS} from \"./Config\";\r\n\r\n\r\nclass InnManager {\r\n\r\n    static _data = PARAMS;\r\n\r\n    static _inns = PARAMS.inns;\r\n    static _func = {};\r\n    static _defaultInn = {};\r\n    static _id = \"\";\r\n\r\n    constructor() {\r\n        throw new Error(\"this is a static class\");\r\n    }\r\n\r\n    /**\r\n     * init the InnManager with an ID\r\n     * @param {string} id\r\n     */\r\n    static init(id){\r\n        this._id = id;\r\n    }\r\n\r\n    /**\r\n     * return the whole array of inns\r\n     * @returns {Inn[]}\r\n     */\r\n    static inns(){\r\n        return this._inns;\r\n    }\r\n\r\n    /**\r\n     * return the active inn\r\n     * @returns {Inn}\r\n     */\r\n    static inn(){\r\n        let index = this.findInn(this._id);\r\n        return this._inns[index];\r\n    }\r\n\r\n    /**\r\n     * return the inn display name\r\n     * @returns {string}\r\n     */\r\n    static innName(){\r\n        return this.inn().displayName;\r\n    }\r\n\r\n    /**\r\n     * return the inn id\r\n     * @returns {string}\r\n     */\r\n    static innId(){\r\n        return this.inn().id;\r\n    }\r\n\r\n    /**\r\n     * return the whole array of rooms for the active inn\r\n     * @returns {Room[]}\r\n     */\r\n    static rooms(){\r\n        return this.inn().rooms;\r\n    }\r\n\r\n    /**\r\n     * return a specific room for the active inn\r\n     * @param {number} id - the room index\r\n     * @returns {Room}\r\n     */\r\n    static room(id){\r\n        return this.rooms()[id];\r\n    }\r\n\r\n    /**\r\n     * register a custom action to use for a room\r\n     * @param {string} actionName - the action name\r\n     * @param {()=> void} callback - the action function\r\n     */\r\n    static registerAction(actionName,callback){\r\n        this._func[actionName] = callback;\r\n    }\r\n\r\n    /**\r\n     * call a specific action or a room\r\n     * @param {string} actionName - the action name\r\n     * @param {any[]} args - the action arguments\r\n     */\r\n    static executeAction(actionName,args){\r\n        if(this._func.hasOwnProperty(actionName)){\r\n            this._func[actionName].call(this,args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * find a inn via it's id\r\n     * @param {string} name - the inn name\r\n     * @returns {number}\r\n     */\r\n    static findInn(name){\r\n        let index = 0;\r\n        for(let i = 0; i < this._inns.length; i++){\r\n            const {id} = this._inns[i];\r\n            if(id === name){\r\n                index = 0;\r\n                break;\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n\r\n\r\n}\r\nexport {InnManager}","import {InnManager} from \"./InnManager\";\r\n\r\n\r\nclass Window_InnRooms extends Window_ItemList {\r\n\r\n    constructor() {\r\n        super(...arguments);\r\n    }\r\n\r\n    initialize(rect) {\r\n        super.initialize(rect);\r\n        this.refresh();\r\n        this.activate();\r\n        this.forceSelect(0);\r\n    }\r\n\r\n    maxCols() {\r\n        return 1;\r\n    }\r\n\r\n    makeItemList() {\r\n        const rooms = InnManager.rooms();\r\n\r\n        for(let i = 0; i < rooms.length; i++){\r\n            this._data.push(rooms[i]);\r\n        }\r\n    }\r\n\r\n\r\n    drawItem(index) {\r\n        const item = this.itemAt(index);\r\n        if(item){\r\n            const rect = this.itemLineRect(index);\r\n            this.changePaintOpacity(this.canBuy(item));\r\n            this.drawRoomName(item, rect.x,rect.y,rect.width);\r\n            this.changePaintOpacity(1);\r\n        }\r\n    }\r\n\r\n    canBuy(item){\r\n        return $gameParty.gold() >= item.price;\r\n    }\r\n\r\n    isEnabled(item){\r\n        return $gameParty.gold() >= item.price;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {Room} item\r\n     * @param x\r\n     * @param y\r\n     * @param width\r\n     */\r\n    drawRoomName(item, x, y, width) {\r\n        if(item) {\r\n            this.resetTextColor();\r\n            this.drawText(item.name,x,y,width);\r\n\r\n        }\r\n    }\r\n\r\n    updateHelp() {\r\n        this.setHelpWindowRoom(this.item());\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param{Room} item\r\n     */\r\n    setHelpWindowRoom(item){\r\n\r\n        if(this._helpWindow && item !== null){\r\n\r\n            this._helpWindow.setText(item.description);\r\n        }\r\n    }\r\n\r\n    refresh() {\r\n        super.refresh();\r\n    }\r\n\r\n}\r\nexport {Window_InnRooms}","\r\n\r\nclass Window_InnConfirmation extends Window_HorzCommand {\r\n\r\n    constructor() {\r\n        super(...arguments);\r\n    }\r\n\r\n    initialize(rect) {\r\n        super.initialize(rect);\r\n    }\r\n\r\n    maxCols() {\r\n        return 2;\r\n    }\r\n\r\n    makeCommandList() {\r\n        this.addCommand(\"Yes\",\"yes\",true);\r\n        this.addCommand(\"No\",\"no\", true);\r\n    }\r\n}\r\nexport {Window_InnConfirmation}","\r\n\r\nclass Window_InnConfirmationTitle extends Window_Base {\r\n\r\n    constructor() {\r\n        super(...arguments);\r\n    }\r\n\r\n    initialize(rect) {\r\n        super.initialize(rect);\r\n        this.text = \"\";\r\n    }\r\n\r\n    setText(text){\r\n        this.text = text;\r\n        this.refresh();\r\n    }\r\n\r\n    refresh(){\r\n        this.contents.clear();\r\n        this.drawText(this.text,0,0, this.width, 'center');\r\n    }\r\n}\r\nexport {Window_InnConfirmationTitle}","import {Scene_MenuBase} from \"rmmz\";\r\nimport {InnManager} from \"./InnManager\";\r\nimport {Window_InnRooms} from \"./Window_InnRooms\";\r\nimport {Window_InnConfirmation} from \"./Window_InnConfirmation\";\r\nimport {Window_InnConfirmationTitle} from \"./Window_InnConfirmationTitle\";\r\n\r\n\r\nclass Scene_Inn extends Scene_MenuBase {\r\n\r\n    /**\r\n     *\r\n     * @param {string} id - the inn id\r\n     */\r\n    prepare(id) {\r\n        this._id = id;\r\n    }\r\n\r\n    constructor() {\r\n        super(...arguments);\r\n    }\r\n\r\n    initialize() {\r\n        super.initialize();\r\n        InnManager.init(this._id);\r\n        this._inn = InnManager.inn();\r\n        this._slept = false;\r\n        this._waitForInput = false;\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n    }\r\n\r\n    create() {\r\n        super.create();\r\n        this.createInnNameWindow();\r\n        this.createHelpWindow();\r\n        this.createCommandWindow();\r\n        this.createHeaderWindow();\r\n        this.createGoldWindow();\r\n        this.createConfirmWindow();\r\n        this.createConfirmTitleWindow();\r\n        this.createResultsWindow();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        if (!this.isBusy() && this._slept) {\r\n            this.startFadeIn(this.fadeSpeed());\r\n        }\r\n    }\r\n\r\n\r\n    isBusy() {\r\n        return this.isFading() || this._waitForInput;\r\n    }\r\n\r\n    createCommandWindow() {\r\n        const rect = this.commandWindowRect();\r\n        this._windowRoom = new Window_InnRooms(rect);\r\n        this._windowRoom.setHelpWindow(this._helpWindow);\r\n        this._windowRoom.setHandler('ok', this.onRoomOk.bind(this));\r\n        this._windowRoom.setHandler('cancel', this.popScene.bind(this));\r\n        this.addWindow(this._windowRoom);\r\n    }\r\n\r\n\r\n    createConfirmWindow() {\r\n        const rect = this.confirmWindowRect();\r\n        this._confirmWindow = new Window_InnConfirmation(rect)\r\n        this._confirmWindow.setHandler('yes', this.onConfirm.bind(this));\r\n        this._confirmWindow.setHandler('no', this.onUnconfirm.bind(this));\r\n        this._confirmWindow.hide();\r\n        this.addWindow(this._confirmWindow);\r\n    }\r\n\r\n    onConfirm() {\r\n        SoundManager.playShop();\r\n        // this.startFadeOut(this.slowFadeSpeed());\r\n        const item = this._windowRoom.item();\r\n        $gameParty.loseGold(item.price);\r\n        InnManager.executeAction(item.func, item.args);\r\n        this._confirmWindow.hide();\r\n        this._confirmTitleWindow.hide();\r\n        this._windowRoom.show();\r\n        this._windowRoom.activate();\r\n    }\r\n\r\n    onUnconfirm() {\r\n        this._confirmWindow.hide();\r\n        this._confirmTitleWindow.hide();\r\n        this._windowRoom.show();\r\n        this._windowRoom.activate();\r\n    }\r\n\r\n    createResultsWindow() {\r\n        const rect = this.resultWindowRect();\r\n        this._resultWindow = new Window_Message(rect);\r\n        this.addWindow(this._resultWindow);\r\n    }\r\n\r\n    resultWindowRect() {\r\n        const width = Graphics.boxWidth - 100;\r\n        const height = this.calcWindowHeight(5, false);\r\n        const x = Graphics.width / 2 - (width / 2);\r\n        const y = Graphics.height / 2 - (height / 2);\r\n        return new Rectangle(x,y,width,height);\r\n    }\r\n\r\n    createConfirmTitleWindow() {\r\n        const rect = this.confirmTitleWindowRect();\r\n        this._confirmTitleWindow = new Window_InnConfirmationTitle(rect);\r\n        this._confirmTitleWindow.hide();\r\n        this.addWindow(this._confirmTitleWindow);\r\n    }\r\n\r\n    confirmTitleWindowRect() {\r\n        const width = this.calcWindowHeight(8, false) * 2;\r\n        const height = this.calcWindowHeight(1, false);\r\n        const x = Graphics.width / 2 - (width / 2);\r\n        const y = Graphics.height / 2 - (height / 2) - height - 25;\r\n        return new Rectangle(x, y, width, height);\r\n    }\r\n\r\n    confirmWindowRect() {\r\n        const width = this.calcWindowHeight(2, true) * 2;\r\n        const height = this.calcWindowHeight(1, true);\r\n        const x = Graphics.width / 2 - (width / 2);\r\n        const y = Graphics.height / 2 - (height / 2);\r\n        return new Rectangle(x, y, width, height);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    onRoomOk() {\r\n        this._windowRoom.deactivate();\r\n        this._confirmWindow.show();\r\n        this._confirmWindow.activate();\r\n\r\n        const room = this._windowRoom.item();\r\n        const text = \"Do you want to sleep in \" + room.name;\r\n        this._confirmTitleWindow.setText(text);\r\n        this._confirmTitleWindow.show();\r\n    }\r\n\r\n    createHeaderWindow() {\r\n        const rect = this.headerWindowRect();\r\n        this._headerWindow = new Window_Help(rect);\r\n        this._headerWindow.setText(\"Rooms\");\r\n        this.addWindow(this._headerWindow);\r\n    }\r\n\r\n    headerWindowRect() {\r\n        const x = 0;\r\n        const y = this.mainAreaTop() + this.innNameWindowRect().y + 10;\r\n        const width = this.mainCommandWidth();\r\n        const height = this.calcWindowHeight(1, false);\r\n        return new Rectangle(x, y, width, height);\r\n    }\r\n\r\n\r\n    commandWindowRect() {\r\n        const ww = this.mainCommandWidth();\r\n        const wh = this.mainAreaHeight() - this.goldWindowRect().height - this.headerWindowRect().height - 20;\r\n        const wx = 0;\r\n        const wy = this.mainAreaTop() + this.headerWindowRect().height + 10;\r\n        return new Rectangle(wx, wy, ww, wh);\r\n    }\r\n\r\n    createGoldWindow() {\r\n        const rect = this.goldWindowRect();\r\n        this._goldWindow = new Window_Gold(rect);\r\n        this.addWindow(this._goldWindow);\r\n    }\r\n\r\n    goldWindowRect() {\r\n        const ww = this.mainCommandWidth();\r\n        const wh = this.calcWindowHeight(1, true);\r\n        const wx = 0;\r\n        const wy = this.mainAreaBottom() - 80;\r\n        return new Rectangle(wx, wy, ww, wh);\r\n    }\r\n\r\n    createInnNameWindow() {\r\n        const rect = this.innNameWindowRect();\r\n        this._innNameWindow = new Window_Help(rect);\r\n        this._innNameWindow.setText(this._inn.displayName);\r\n        this.addWindow(this._innNameWindow);\r\n    }\r\n\r\n    innNameWindowRect() {\r\n        const x = 0;\r\n        const y = this.buttonY();\r\n        const width = Graphics.boxWidth - this._cancelButton.width - 30;\r\n        const height = this.calcWindowHeight(1, false);\r\n        return new Rectangle(x, y, width, height);\r\n    }\r\n}\r\n\r\nexport {Scene_Inn}"],"names":[],"mappings":"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}